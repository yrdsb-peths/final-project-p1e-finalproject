#BlueJ class context
comment0.target=ScoreUtilities
comment0.text=\r\n\ Static\ methods\ used\ for\ score\ processing\r\n\ \r\n\ @author\ Carl\r\n\ @version\ 2022.01.18\r\n
comment1.params=inputs
comment1.target=java.lang.String[][]\ convertArray(java.util.ArrayList)
comment1.text=\r\n\ Converts\ an\ ArrayList<String>\ with\ a\ delimiter\ into\ String[][]\r\n\ \r\n\ @param\ inputs\ ArrayList<String>\ with\ a\ delimiter\ in\ each\ index\r\n\ @return\ String[][],\ formated\ according\ to\ demiliter\:\ Score\ ->\ Date\r\n
comment10.params=arr\ low\ high
comment10.target=void\ quickSort(java.lang.String[][],\ int,\ int)
comment10.text=\r\n\ QuickSort\ method\ that\ does\ work\ in\ the\ background\r\n\ \r\n\ @param\ arr\ String[][]\r\n\ @param\ low\ Pointer\r\n\ @param\ high\ Pointer\r\n
comment11.params=arr\ low\ high
comment11.target=int\ partition(java.lang.String[][],\ int,\ int)
comment11.text=\r\n\ QuickSort\ helper\ method\r\n\ \r\n\ @param\ arr\ String[][]\r\n\ @param\ low\ Pointer\r\n\ @param\ high\ Pointer\r\n\ @return\ Partion\ element\r\n
comment12.params=arr\ a\ b
comment12.target=void\ swap(java.lang.String[][],\ int,\ int)
comment12.text=\r\n\ Sorting\ helper\ method\ -\ does\ the\ swapping\r\n\ \r\n\ @param\ arr\ Array\ to\ be\ swaped,\ String[][]\r\n\ @param\ a\ Element\ to\ be\ swapped\r\n\ @param\ b\ Element\ to\ be\ swapped\r\n
comment2.params=input
comment2.target=java.lang.String\ getDate(java.lang.String)
comment2.text=\r\n\ Method\ takes\ an\ string\ containing\ a\ deliminiter,\ returns\ the\ date\r\n\ \r\n\ @param\ input\ String\ with\ demiliter\ \r\n\ @return\ Substring'd\ from\ input\r\n
comment3.params=input
comment3.target=java.lang.String\ getScore(java.lang.String)
comment3.text=\r\n\ Method\ takes\ an\ string\ containing\ a\ deliminiter,\ returns\ the\ score\r\n\ \r\n\ @param\ input\ String\ with\ demiliter\ \r\n\ @return\ Substring'd\ from\ input\r\n
comment4.params=arr
comment4.target=void\ reverse(java.lang.String[][])
comment4.text=\r\n\ Reverses\ an\ array\r\n\ \r\n\ @param\ arr\ String[][]\ array\r\n
comment5.params=array
comment5.target=void\ printArray(java.lang.String[][])
comment5.text=\r\n\ Debugging\ purposes;\ not\ used\ in\ main\ code\r\n\ Prints\ out\ 2D\ array\r\n\ \r\n\ @param\ array\ A\ 2D\ array\r\n
comment6.params=
comment6.target=java.util.ArrayList\ extractScores()
comment6.text=\r\n\ Method\ accesses\ Words.txt\ and\ stores\ all\ entries\ into\ an\ ArrayList<String>\r\n\ \r\n\ @return\ ArrayList<String>\ with\ each\ index\ reflecting\ a\ line\ in\ .txt\ file\r\n
comment7.params=x
comment7.target=void\ writeScore(java.lang.String)
comment7.text=\r\n\ Method\ writes\ score\ to\ Scores.txt\r\n\ \r\n\ @param\ score\ String\ containing\ delimiter\ (-)\r\n
comment8.params=
comment8.target=java.lang.String\ getDate()
comment8.text=\r\n\ Method\ gets\ a\ date\ using\ system\ information\r\n\ \r\n\ @return\ A\ date\ (String)\ formatted\ in\ yyyy.MM.dd\r\n
comment9.params=arr
comment9.target=void\ quickSort(java.lang.String[][])
comment9.text=\r\n\ Quicksort\ method\ that\ gets\ called\r\n\ \r\n\ @param\ arr\ String[][]\r\n
numComments=13
